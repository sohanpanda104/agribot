


## üîå 1. Wiring to Raspberry Pi 4

| Sensor Pin | Raspberry Pi GPIO Pin |
| ---------- | --------------------- |
| VCC        | 5V (Pin 2 or 4)       |
| GND        | GND (Pin 6)           |
| Trig       | GPIO 23 (Pin 16)      |
| Echo       | GPIO 24 (Pin 18)      |

‚ö†Ô∏è **Important**: Use a **voltage divider (2 resistors)** on **Echo** to protect the Pi from 5V. Echo gives 5V, Pi can only take 3.3V safely.

### üîß Voltage Divider for Echo:

* **10kŒ© resistor** from Echo to Pi GPIO (24)
* **20kŒ© resistor** from Echo to GND

---

## üì¶ 2. Install Required Python Libraries

```bash
sudo apt update
sudo apt install python3-rpi.gpio
```

---

## üß† 3. Full Python Code (`ultrasonic_waterproof.py`)

```python
import RPi.GPIO as GPIO
import time

# GPIO pin setup
TRIG = 23
ECHO = 24

GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

def measure_distance():
    # Trigger the sensor
    GPIO.output(TRIG, True)
    time.sleep(0.00001)  # 10 microseconds
    GPIO.output(TRIG, False)

    # Wait for Echo to go HIGH
    start_time = time.time()
    while GPIO.input(ECHO) == 0:
        start_time = time.time()

    # Wait for Echo to go LOW
    stop_time = time.time()
    while GPIO.input(ECHO) == 1:
        stop_time = time.time()

    # Calculate time difference
    time_elapsed = stop_time - start_time
    # Distance = (time √ó speed of sound) / 2
    distance = (time_elapsed * 34300) / 2  # cm

    return distance

try:
    while True:
        dist = measure_distance()
        print(f"Measured Distance: {dist:.2f} cm")
        time.sleep(0.5)

except KeyboardInterrupt:
    print("Measurement stopped by user")

finally:
    GPIO.cleanup()
```

---

## ‚úÖ 4. Run the Script

```bash
python3 ultrasonic_waterproof.py
```

You should see output like:

```
Measured Distance: 45.23 cm
Measured Distance: 44.87 cm
...
```

---


